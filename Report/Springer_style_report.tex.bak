

\documentclass{svproc}
\usepackage[english]{babel} % English language/hyphenation
%\usepackage{amsmath,amsfonts,amsthm} % Math packages
\usepackage{url}
\usepackage{sectsty} % Allows customizing section commands
\usepackage{graphicx}
\usepackage{multicol}
\usepackage{footmisc}
\usepackage{cite}
\bibliographystyle{unsrt}

%----------------------------------------------------------------------------------------
%	TITLE SECTION
%----------------------------------------------------------------------------------------

\newcommand{\horrule}[1]{\rule{\linewidth}{#1}} % Create horizontal rule command with 1 argument of height

\title{A Comparison of Time Domain Numerical Methods for Faster Acoustic Modelling} % The assignment title
\titlerunning{Time Domain Methods for Faster Acoustic Modelling}
\author{Simon Durbridge} % Your name
\authorrunning{S.Durbridge}
%\date{\normalsize\today} % Today's date or a custom date
\institute{Dept. Engineering, Mathematics \&\ Computing\\ University of Derby\\
\email{s.durbridge1@unimail.derby.ac.uk} % optional, same for URL of homepage
} % end of address field

\begin{document}

%\maketitle % Print the title

%----------------------------------------------------------------------------------------
%	Abstract
%----------------------------------------------------------------------------------------

%\begin{abstract}
%Interest in acoustic modelling continues to increase due to a rise in commercial demand and improvements in tool quality. Wave based modelling methods promise many benefits over the commonly used ray based methods, but the use of these methods remains restricted due to the inherent high resource demands that non-specialist computing platforms struggle to cater for. For real-time applications time domain wave solving may be of particular use, due to the inherent nature and accuracy of the solving i.e. the ability to provide direct solutions (real time audio data) as opposed to indirect solutions (impulse responses). Two potential methods of reducing computation time may be to calculate indirect solutions through sparse finite-difference time domain Methods(S-FDTD), or to calculate direct results through pseudo-spectral time domain methods. This report aims to highlight the difference between these two methods, and the potential benefits for improved solution rate. 


%\keywords{Acoustic Modelling, Numerical Methods, Time Domain, Fast}
%\end{abstract}


%\newpage

%----------------------------------------------------------------------------------------
%	Contents
%----------------------------------------------------------------------------------------

%\tableofcontents

%\newpage

%----------------------------------------------------------------------------------------
%	Figures
%----------------------------------------------------------------------------------------

%\listoffigures

%\newpage



%----------------------------------------------------------------------------------------
%	Introduction
%----------------------------------------------------------------------------------------

\section{Introduction}
Interest in acoustic modelling continues to increase due to external factors such as a renewed focus in global standards of distributed loudspeaker system design requirements, as well as trends in consumer technology such as the video games and entertainment sectors. This brings simulation to the forefront for areas such as public address and safety(Public Address Voice Alarm(PAVA)), as well as less safety driven interests such as immersive virtual reality experiences of synthesized spaces. The benefits of improved acoustic modelling methods allows key stakeholders to leverage high quality results and create better quality products. Time is an ever more strict constraint in many commercial development applications, and an inherent issue with high accuracy modelling is a significant increase in time spent simulating, as well as computational resources and specialist knowledge.\\

\subsection{Problem Definition}
Real time acoustic modelling would be of significant benefit to many fields, as engineers could make design changes 'on the fly', and entertainment users could have more realistic  experiences. This should be possible for an arbitrary number of sources and receivers, in a proportionally large environment at high quality. Is it possible to further reduce computation time for large acoustic problems? There are two 'branches' of computation solution that should be considered: the direct i.e. 48000+ direct outputs from the simulation per second, and the indirect i.e. a system impulse response that may be convolved with mixed source signals in order to create an auralization of the system.//


\begin{figure}
\centering
\includegraphics[width=0.6\textwidth]{googlevirtualsoundsources.jpg}
\centering
\caption{A visualisation of virtual sound sources ~\cite{googlevr2016}}
\end{figure}

%\newpage

%------------------------------------------------
\section{Acoustic Modelling}
\subsection{Applications}
Acoustic modelling has a broad range of applications from the very large to the very small, and there are a number of key methods used to model different problem types. Problems of interest to this study are the acoustically large i.e. problems that are significantly large compared to a high proportion of the wavelengths of interest. These problems could include multiple sources and receivers in large spaces such as stadiums, cathedrals, shopping centres, caverns, cityscapes, mountain ranges etc.\\ For problems of this nature, ray based modelling methods are commonly used. Ray based methods have a significant number of compromises, such as they do not accommodate for modal or atmospheric behaviour. Further to this when considering a large number of sound sources and receivers in a large simulation, some of the benefits of ray based methods may be outweighed with computational cost. Wave based modelling methods have a similar set of benefits and drawbacks that have as yet reduced use to high detail simulation of smaller problems. As higher computational power becomes more widely available, wave based methods may become more practical to use for problems with varying numbers of sources and receivers e.g. video games, building acoustic demonstrations, personalised audio for viewing moving pictures, pilot training simulation etc. Below is a brief discussion of ray and wave based methods, with a deeper focus on time domain wave methods.

\subsection{Ray Methods}

Ray based modelling methods, also regarded as geometric methods, are those that rely on the concept of ray casting in order to compute the impulse response of an acoustical system\footnote{In the context of this report, an acoustical system is the combination of sound source, sound receiver and surrounding environment}. In these methods conceptual rays are cast between sources and receivers, with the time of flight and boundary interactions(reflections) accounted for. As such this method relies on the concept that the acoustic wavelength is significantly smaller than the smallest potential obstacle. Varieties of geometric methods include ray tracing, beam tracing and the image source model. These methods does not account for modal effects at low frequency, and may require a significant number of rays for each source and receiver, in order for any result to be relevant. Further to this, a new model has to be computed every time a source and receiver moves to a different location or direction within the geometry. However, ray casting is a mature and well supported method in graphical rendering of environments, and may benefit from continual support and optimisation for faster performance.

%\centering
%\includegraphics[width=0.4\textwidth]{itdexample.jpg}
%\centering
%\caption{A basic model diagram of the ITD from a source to a listener given by $\frac{r(\theta + sin \theta)}{\textit{c}}$ ~\cite{rumsey2012spatial}}
%\end{figure} 



\subsection{Wave Methods}

Wave based modelling methods comprise of the discretization of a problem geometry into rational segments, following which a partial different equation is solved across the components or 'elements' of that geometry. The partial different equations used in the context of large problems are generally linearised Navier-Stokes equations for waves in homogeneous media. Some methods will perform in the time domain i.e. iterative direct solutions, and some in the frequency domain such as FEM or the boundary element method(BEM). The benefit of 'element' methods such as FEM, BEM Discontinuous Galerkin, is that a significant amount of supporting research has been done to improve this method of formulation. This includes meshing using arbitrarily sized elements, applying and combining different physics problems, and has generally been improved for relatively fast and efficient solving. In acoustics, these methods still involve solving a domain that is discretized such that the smallest element is a sixth the size of the shortest wavelength. Further more frequency domain calculations require solutions for every frequency of interest, and can be much slower than required for real-time computation. Time domain methods for direct solutions can however be optimised for real time direct solutions. Three time domain methods are evaluated in the next section.

%\begin{figure}[H]
%\centering
%\includegraphics[width=0.3\textwidth]{ambisonicmicpatterns.jpg}
%\centering
%\caption{A plot of four ambisonic microphone polar patterns (for B format)~\cite{Wiggins2004}}
%\end{figure}


\newpage
%------------------------------------------------
\section{Time Domain Methods}
%---------------------------------------------
\subsection{FDTD}

The finite-difference time domain(FDTD) method as described by Yee, involves discretizing the domain into 3 separate components for a 2 dimensional problem. These components for an acoustic case are velocity vectors in each dimension, and a uniform pressure grid. In the basic 7 point stencil the difference between the pressure and surrounding velocity gradients at a half step in time, are evaluated to determine the pressure at that location for the next half step in time. This method is a second order central difference in space and first order forward difference in time(calculating the future, based on the past and present). For acceptable stability fulfilling the Courant condition, upwards of 6 cells per smallest wavelength is required per simulation. Generally, FDTD 'stencils' requires a purely rectilinear discretization of the problem geometry, though octohedral and other schemes have been used in the similar finite-volume time domain method. \\ Though relatively simple and scalable, basic FDTD methods require all local calculations to be undertaken, and as such are more prone to error as well as requiring a large number of memory accesses. However, as the stencil equations is identical within the problem geometry (excluding the boundaries), it is conceptually highly parallelizable i.e. the same basic math operations are used to evaluate a large data set in fast succession.

\subsection{S-FDTD}
The sparse finite difference time domain method is simply an extra step added to the FDTD method, in which the power distribution of the grid is evaluated and only cells within a rational distance of those with an appropriate amount of energy are computed. This method is appropriate for electromagnetic simulation as the waves are transverse and can propagate through contiguous media (or no media) more simply than the acoustic case. As acoustic waves are longitudinal the SFDTD method may be applied to pulses such as Gausian functions in order to still remain relevant, in this the travel and decay of wavefronts is accounted for in the calculation, and multiple sources and receivers can be computed for simultaneously. Some modal behaviour may not be incorporated in this method, but this must be confirmed with experimentation. 

%\begin{center}
%$L_T = L_W + 10 log \left( \frac{QMe}{4\pi D_{x}^2} + \frac{4N}{S \overline{a} M a}\right) + K $\\
%\end{center}
%where:
%\begin{enumerate}
%\item $L_T =$ total sound pressure
%\item $L_W =$ sound power level of source
%\item $\frac{QMe}{4\pi D_{x}^2}$ is a description of the sound source direct radiation properties
%\item $\frac{4N}{S \overline{a} M a}$ is a description of the reverberant field properties
%\item $K = \frac{\rho \textit{c}}{400}$ relating to the transfer of sound through air
%\end{enumerate}

%\newpage

\subsection{PSTD}
The pseudospectral time-domain method (PSTD) is a happy medium of high accuracy frequency domain differentiation, with simplicity and efficiency of time domain solving. In this method, rows and columns are transformed into the frequency domain, and are differentiated all together by being multiplied by a differentiating impulse response. The resulting grid is then evaluated with the appropriate coefficients and an attenuating perfectly-match layer is applied as an absorbing boundary condition.

%\begin{figure}[H]
%\centering
%\includegraphics[width=0.4\textwidth]{coreydiagram.jpg}
%\caption{A diagram of the layout for Corey's listening test\cite{Corey2002}}
%\end{figure}

%\newpage
\subsection{System Speed}
In order to obtain 'real time' performance in a non real time system such as a generic operating system, the modelling method must by able to receive, compute and return buffer-loads of audio samples in fast succession with minimal latency i.e. having a system that performs optimally fast to allow for a minimal buffer size. Direct solutions may be beneficial for very large problems with a large or fluctuating numbers of sources and receivers, as no extra computations will be necessary so the time distributed by the kernel can be used optimally for the solution processing. An indirect solution may still be beneficial to have, as as system of indirect solutions can be cross-faded between. This means that if the computation process is running out of time the previous solution can still be used, although this solution is effectively incorrect there will be less chance of returning a buffer without the correct number of results.

In Windows distributions before 10, the stock buffer size was 16mS which may equate to a 768 sample buffer. However, much of the buffer size is dependent on hardware drivers. As of Windows 10, buffer sizes default to 10mS i.e. 480 samples large. However, as windows is a non-real time multi-tasking operating system, there is no trivial answer to how fast the process must perform beyond 'as fast as possible' with the largest problem size.


%----------------------------------------------------------------------------------------


\section{Conclusion}




%----------------------------------------------------------------------------------------
\newpage
\section{References}

%\bibliography{library}{}
%\bibliographystyle{plain}

\end{document}